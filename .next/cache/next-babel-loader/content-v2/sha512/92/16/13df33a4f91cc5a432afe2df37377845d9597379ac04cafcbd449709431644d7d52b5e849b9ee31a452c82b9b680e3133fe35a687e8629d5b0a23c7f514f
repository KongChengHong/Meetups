{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel/meetup/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport MongoClient from 'mongodb';\nconst DUMMY_MEETUP = [{\n  id: '1',\n  title: 'A first meetup',\n  image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n  address: 'XXX',\n  description: 'Meetup 1'\n}, {\n  id: '2',\n  title: 'A first meetup',\n  image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n  address: 'XXX',\n  description: 'Meetup 2'\n}];\n\nconst HamePage = props => {\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\n  // useEffect(() => {\n  //     //fetch data\n  //     setLoadedMeetup(DUMMY_MEETUP);\n  // }, []);\n  console.log('props', props);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticProps() {\n  //fetch data from mongoDB (without calling api)\n  MongoClient.connect();\n  const client = await MongoClient.connect('mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray(); //insert one document into meetupsCollection colleciton\n\n  client.close();\n  console.log('meetups', meetups);\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: '2',\n        title: 'A first meetup',\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        address: 'XXX',\n        description: 'Meetup 2'\n      }))\n    },\n    revalidate: 10 //regenerate a new page if a new request is commming every xx sec.\n\n  };\n}\nexport default HamePage;","map":{"version":3,"sources":["/Users/daniel/meetup/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_MEETUP","id","title","image","address","description","HamePage","props","console","log","meetups","getStaticProps","connect","client","db","meetupsCollection","collection","find","toArray","close","map","meetup","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wKAHX;AAIIC,EAAAA,OAAO,EAAE,KAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADiB,EAQjB;AACIJ,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wKAHX;AAIIC,EAAAA,OAAO,EAAE,KAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARiB,CAArB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACAZ,EAAAA,WAAW,CAACa,OAAZ;AAEA,QAAMC,MAAM,GAAG,MAAMd,WAAW,CAACa,OAAZ,CACjB,yFADiB,CAArB;AAGA,QAAME,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CAVmC,CAUuB;;AAE1DL,EAAAA,MAAM,CAACM,KAAP;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,OAAvB;AAEA,SAAO;AACHH,IAAAA,KAAK,EAAE;AACHG,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAC9BpB,QAAAA,EAAE,EAAE,GAD0B;AAE9BC,QAAAA,KAAK,EAAE,gBAFuB;AAG9BC,QAAAA,KAAK,EAAE,wKAHuB;AAI9BC,QAAAA,OAAO,EAAE,KAJqB;AAK9BC,QAAAA,WAAW,EAAE;AALiB,OAAb,CAAZ;AADN,KADJ;AAUHiB,IAAAA,UAAU,EAAE,EAVT,CAUa;;AAVb,GAAP;AAYH;AAED,eAAehB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport MongoClient from 'mongodb';\n\nconst DUMMY_MEETUP = [\n    {\n        id: '1',\n        title: 'A first meetup',\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        address: 'XXX',\n        description: 'Meetup 1',\n    },\n    {\n        id: '2',\n        title: 'A first meetup',\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        address: 'XXX',\n        description: 'Meetup 2',\n    },\n];\n\nconst HamePage = (props) => {\n    // const [loadedMeetup, setLoadedMeetup] = useState([]);\n    // useEffect(() => {\n    //     //fetch data\n    //     setLoadedMeetup(DUMMY_MEETUP);\n    // }, []);\n    console.log('props', props);\n\n    return <MeetupList meetups={props.meetups}></MeetupList>;\n};\n\nexport async function getStaticProps() {\n    //fetch data from mongoDB (without calling api)\n    MongoClient.connect();\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray(); //insert one document into meetupsCollection colleciton\n\n    client.close();\n\n    console.log('meetups', meetups);\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                id: '2',\n                title: 'A first meetup',\n                image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n                address: 'XXX',\n                description: 'Meetup 2',\n            })),\n        },\n        revalidate: 10, //regenerate a new page if a new request is commming every xx sec.\n    };\n}\n\nexport default HamePage;\n"]},"metadata":{},"sourceType":"module"}