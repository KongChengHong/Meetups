{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel/meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb\",\n    title: \"meetup\",\n    address: \"Some Street\",\n    description: \"hello meetups\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  });\n  console.log('meetups', meetups);\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }, {\n      params: {\n        meetupId: 'm2'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  console.log('meetupId', meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        id: meetupId,\n        title: 'First Meetup',\n        address: 'sdfsdfsdf',\n        description: 'sdfsdfsdf'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/daniel/meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","console","log","fallback","paths","params","meetupId","getStaticProps","context","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI,QAAC,YAAD;AACI,IAAA,KAAK,EAAC,wKADV;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,OAAO,EAAC,aAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACjB,yFADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AAEA,SAAO;AACHK,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADZ,KADG,EAMH;AACID,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN;AADZ,KANG;AAFJ,GAAP;AAeH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB;AAEA,SAAO;AACHG,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,wKADC;AAERC,QAAAA,EAAE,EAAEN,QAFI;AAGRO,QAAAA,KAAK,EAAE,cAHC;AAIRC,QAAAA,OAAO,EAAE,WAJD;AAKRC,QAAAA,WAAW,EAAE;AALL;AADT;AADJ,GAAP;AAWH;AAED,eAAexB,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n    return (\n        <MeetupDetail\n            image=\"https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb\"\n            title=\"meetup\"\n            address=\"Some Street\"\n            description=\"hello meetups\"\n        />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        'mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, { _id: 1 });\n    console.log('meetups', meetups);\n\n    return {\n        fallback: false,\n        paths: [\n            {\n                params: {\n                    meetupId: 'm1',\n                },\n            },\n            {\n                params: {\n                    meetupId: 'm2',\n                },\n            },\n        ],\n    };\n}\n\nexport async function getStaticProps(context) {\n    //fetch data for a single meetup\n    const meetupId = context.params.meetupId;\n    console.log('meetupId', meetupId);\n\n    return {\n        props: {\n            meetupData: {\n                image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n                id: meetupId,\n                title: 'First Meetup',\n                address: 'sdfsdfsdf',\n                description: 'sdfsdfsdf',\n            },\n        },\n    };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}