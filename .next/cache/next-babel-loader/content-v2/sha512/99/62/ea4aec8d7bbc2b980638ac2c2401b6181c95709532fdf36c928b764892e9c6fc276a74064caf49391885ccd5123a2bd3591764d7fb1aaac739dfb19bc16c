{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel/meetup/pages/index.js\";\nimport MongoClient from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUP = [{\n  id: '1',\n  title: 'A first meetup',\n  image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n  address: 'XXX',\n  description: 'Meetup 1'\n}, {\n  id: '2',\n  title: 'A first meetup',\n  image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n  address: 'XXX',\n  description: 'Meetup 2'\n}];\n\nconst HamePage = props => {\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\n  // useEffect(() => {\n  //     //fetch data\n  //     setLoadedMeetup(DUMMY_MEETUP);\n  // }, []);\n  console.log('props', props);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Highly active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps() {\n  //fetch data from mongoDB (without calling api)\n  MongoClient.connect();\n  const client = await MongoClient.connect('mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray(); //insert one document into meetupsCollection colleciton\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description\n      }))\n    },\n    revalidate: 10 //regenerate a new page if a new request is commming every xx sec.\n\n  };\n}\nexport default HamePage;","map":{"version":3,"sources":["/Users/daniel/meetup/pages/index.js"],"names":["MongoClient","Fragment","Head","MeetupList","DUMMY_MEETUP","id","title","image","address","description","HamePage","props","console","log","meetups","getStaticProps","connect","client","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,YAAY,GAAG,CACjB;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wKAHX;AAIIC,EAAAA,OAAO,EAAE,KAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADiB,EAQjB;AACIJ,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,wKAHX;AAIIC,EAAAA,OAAO,EAAE,KAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARiB,CAArB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjBD;;AAmBA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACAf,EAAAA,WAAW,CAACgB,OAAZ;AAEA,QAAMC,MAAM,GAAG,MAAMjB,WAAW,CAACgB,OAAZ,CACjB,yFADiB,CAArB;AAGA,QAAME,EAAE,GAAGD,MAAM,CAACC,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CAVmC,CAUuB;;AAE1DL,EAAAA,MAAM,CAACM,KAAP;AAEA,SAAO;AACHZ,IAAAA,KAAK,EAAE;AACHG,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAC9BpB,QAAAA,EAAE,EAAEoB,MAAM,CAACC,GAAP,CAAWC,QAAX,EAD0B;AAE9BrB,QAAAA,KAAK,EAAEmB,MAAM,CAACnB,KAFgB;AAG9BC,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAHgB;AAI9BC,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAJc;AAK9BC,QAAAA,WAAW,EAAEgB,MAAM,CAAChB;AALU,OAAb,CAAZ;AADN,KADJ;AAUHmB,IAAAA,UAAU,EAAE,EAVT,CAUa;;AAVb,GAAP;AAYH;AAED,eAAelB,QAAf","sourcesContent":["import MongoClient from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETUP = [\n    {\n        id: '1',\n        title: 'A first meetup',\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        address: 'XXX',\n        description: 'Meetup 1',\n    },\n    {\n        id: '2',\n        title: 'A first meetup',\n        image: 'https://www.ox.ac.uk/sites/files/oxford/styles/ow_large_feature/s3/field/field_image_main/Elizabeth%20Nyikos%2C%20rooftops%20over%20Oxford%20%282%29.jpg?itok=MPLJqDmb',\n        address: 'XXX',\n        description: 'Meetup 2',\n    },\n];\n\nconst HamePage = (props) => {\n    // const [loadedMeetup, setLoadedMeetup] = useState([]);\n    // useEffect(() => {\n    //     //fetch data\n    //     setLoadedMeetup(DUMMY_MEETUP);\n    // }, []);\n    console.log('props', props);\n\n    return (\n        <Fragment>\n            <Head>\n                <title>React Meetups</title>\n                <meta name=\"description\" content=\"Highly active\" />\n            </Head>\n            <MeetupList meetups={props.meetups}></MeetupList>\n        </Fragment>\n    );\n};\n\nexport async function getStaticProps() {\n    //fetch data from mongoDB (without calling api)\n    MongoClient.connect();\n\n    const client = await MongoClient.connect(\n        'mongodb+srv://user:12321@cluster0.pqx8t.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray(); //insert one document into meetupsCollection colleciton\n\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map((meetup) => ({\n                id: meetup._id.toString(),\n                title: meetup.title,\n                image: meetup.image,\n                address: meetup.address,\n                description: meetup.description,\n            })),\n        },\n        revalidate: 10, //regenerate a new page if a new request is commming every xx sec.\n    };\n}\n\nexport default HamePage;\n"]},"metadata":{},"sourceType":"module"}